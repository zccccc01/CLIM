// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"

	usercenter "CLIM/app/user/cmd/api/internal/handler/usercenter"
	"CLIM/app/user/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// change pwd
				Method:  http.MethodPut,
				Path:    "/changePwd",
				Handler: usercenter.ChangePwdHandler(serverCtx),
			},
			{
				// login
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: usercenter.LoginHandler(serverCtx),
			},
			{
				// register
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: usercenter.RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// get user info
				Method:  http.MethodGet,
				Path:    "/info",
				Handler: usercenter.GetUserInfoHandler(serverCtx),
			},
			{
				// update user info
				Method:  http.MethodPut,
				Path:    "/info",
				Handler: usercenter.UpdateUserInfoHandler(serverCtx),
			},
			{
				// set userProfile
				Method:  http.MethodPost,
				Path:    "/user-profile",
				Handler: usercenter.SetUserProfileHandler(serverCtx),
			},
			{
				// get userProfile
				Method:  http.MethodGet,
				Path:    "/user-profile",
				Handler: usercenter.GetUserProfileHandler(serverCtx),
			},
			{
				// update userProfile
				Method:  http.MethodPut,
				Path:    "/user-profile",
				Handler: usercenter.UpdateUserProfileHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/v1/user"),
	)
}
